<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:property name="pi" value="3.14159265359" />
    <xacro:macro name="stereocamera_macro"
    params="namespace parent_link camera_suffix frame_rate
      horizontal_fov image_width image_height image_format min_distance
      max_distance noise_mean noise_stddev enable_visual *geometry *origin">
    <link name="${namespace}/stereocamera_${camera_suffix}_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:insert_block name="geometry" />
        </geometry>
      </collision>
      <xacro:if value="${enable_visual}">
        <visual>
          <origin xyz="0 0 0" rpy="0 ${pi/2} 0" />
          <geometry>
            <xacro:insert_block name="geometry" />
          </geometry>
          <material name="red" />
        </visual>
      </xacro:if>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <joint name="${namespace}/stereocamera_${camera_suffix}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/stereocamera_${camera_suffix}_link" />
    </joint>
    <link name="${namespace}/stereocamera_${camera_suffix}_optical_link" />
    <joint name="${namespace}/stereocamera_${camera_suffix}_optical_joint" type="fixed" >
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
      <parent link="${namespace}/stereocamera_${camera_suffix}_link" />
      <child link="${namespace}/stereocamera_${camera_suffix}_optical_link" />
    </joint>
    <gazebo reference="${namespace}/stereocamera_${camera_suffix}_link">
      <sensor type="multicamera" name="stereo_camera">
        <update_rate>${frame_rate}</update_rate>
        <camera name="left">
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
            <format>${image_format}</format>
          </image>
          <clip>
            <near>${min_distance}</near>
            <far>${max_distance}</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>${noise_mean}</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </camera>
        <camera name="right">
        <pose>0 -0.07 0 0 0 0</pose>
        <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
            <format>${image_format}</format>
          </image>
          <clip>
            <near>${min_distance}</near>
            <far>${max_distance}</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>${noise_mean}</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </camera>
        <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
          <robotNamespace>${namespace}</robotNamespace>
          <alwaysOn>true</alwaysOn>
          <updateRate>${frame_rate}</updateRate>
          <cameraName>stereocamera_${camera_suffix}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_${camera_suffix}_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
    </xacro:macro>


    <!--<xacro:macro name="camera_macro"
    params="namespace parent_link camera_suffix frame_rate
      horizontal_fov image_width image_height image_format min_distance
      max_distance noise_mean noise_stddev enable_visual *geometry *origin">
    <link name="${namespace}/camera_${camera_suffix}_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:insert_block name="geometry" />
        </geometry>
      </collision>
      <xacro:if value="${enable_visual}">
        <visual>
          <origin xyz="0 0 0" rpy="0 ${pi/2} 0" />
          <geometry>
            <xacro:insert_block name="geometry" />
          </geometry>
          <material name="red" />
        </visual>
      </xacro:if>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <joint name="${namespace}/camera_${camera_suffix}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/camera_${camera_suffix}_link" />
    </joint>
    <link name="${namespace}/camera_${camera_suffix}_optical_link" />
    <joint name="${namespace}/camera_${camera_suffix}_optical_joint" type="fixed" >
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
      <parent link="${namespace}/camera_${camera_suffix}_link" />
      <child link="${namespace}/camera_${camera_suffix}_optical_link" />
    </joint>
    <gazebo reference="${namespace}/camera_${camera_suffix}_link">
      <sensor type="camera" name="${namespace}_camera_${camera_suffix}">
        <update_rate>${frame_rate}</update_rate>
        <camera name="head">
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
            <format>${image_format}</format>
          </image>
          <clip>
            <near>${min_distance}</near>
            <far>${max_distance}</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>${noise_mean}</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </camera>
        <plugin name="${namespace}_camera_${camera_suffix}_controller" filename="libgazebo_ros_camera.so">
          <robotNamespace>${namespace}</robotNamespace>
          <alwaysOn>true</alwaysOn>
          <updateRate>${frame_rate}</updateRate>
          <cameraName>camera_${camera_suffix}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_${camera_suffix}_link</frameName>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
    </xacro:macro>

    <xacro:macro name="imu_macro"
    params="namespace imu_suffix parent_link imu_size imu_mass imu_topic *origin">
        <link name="${namespace}/imu${imu_suffix}_link">
            <visual>
                <geometry>
                    <box size="${imu_size} ${imu_size} ${imu_size}"/>
                </geometry>
                <material name="white"/>
                </visual>
                <collision>
                <geometry>
                    <box size="${imu_size} ${imu_size} ${imu_size}"/>
                </geometry>
                </collision>
                <xacro:box_inertial mass="${imu_mass}" width="${imu_size}" depth="${imu_size}"/>
        </link>
        <joint name="${namespace}/imu${imu_suffix}_joint" type="fixed">
            <xacro:insert_block name="origin" />
            <parent link="${parent_link}" />
            <child link="${namespace}/imu${imu_suffix}_link" />
        </joint>
        <gazebo reference="${namespace}/imu${imu_suffix}_link">
            <material>Gazebo/White</material>
            <gravity>true</gravity>
            <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>${imu_topic}</topicName>
                <bodyName>${namespace}/imu${imu_suffix}_link</bodyName>
                <updateRateHZ>100.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>${namespace}/imu${imu_suffix}_link</frameName>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
            </sensor>
        </gazebo>
        <gazebo reference="${namespace}/imu${imu_suffix}_joint">
            <provideFeedback>true</provideFeedback>
            <disableFixedJointLumping>true</disableFixedJointLumping>
        </gazebo>
    </xacro:macro>

    <xacro:macro name="lidar_macro"
    params="namespace lidar_suffix parent_link lidar_size lidar_mass lidar_topic *origin">
    <link name="${namespace}/lidar_${lidar_suffix}_link">
      <visual>
          <geometry>
              <box size="${lidar_size} ${lidar_size} ${lidar_size}"/>
          </geometry>
          <material name="white"/>
          </visual>
          <collision>
          <geometry>
              <box size="${lidar_size} ${lidar_size} ${lidar_size}"/>
          </geometry>
          </collision>
          <xacro:box_inertial mass="${lidar_mass}" width="${lidar_size}" depth="${lidar_size}"/>
    </link>
    <joint name="${namespace}/lidar_${lidar_suffix}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/lidar_${lidar_suffix}_link" />
    </joint>
    <gazebo reference="${namespace}/lidar_${lidar_suffix}_link">
      <sensor type="gpu_ray" name="hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <material>Gazebo/White</material>
        <gravity>true</gravity>
        <topic>__default_topic__</topic>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-0.86</min_angle>
              <max_angle>0.86</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>10.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            --><!-- Noise parameters based on published spec for Hokuyo laser
                 achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                 stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                 reading. -->
           <!-- <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
          <topicName>${lidar_topic}</topicName>
          <frameName>${namespace}/lidar_${lidar_suffix}_link</frameName>
        </plugin>
      </sensor>
    </gazebo>
    <gazebo reference="${namespace}/lidar_${lidar_suffix}_joint">
      <provideFeedback>true</provideFeedback>
      <disableFixedJointLumping>true</disableFixedJointLumping>
    </gazebo>
    </xacro:macro>-->

</robot>